export const ERROR_MSG: any = {
    0: "No error",
    1: "Please connect your wallet",
    2: "Chain not supported",
    3: "Enter Amount",
    4: "Insufficient Balance",
    5: "Exceeding Capacity",
    6: "Amount too low",
    7: "Insufficient Debt",
}

export enum ERRORS {
    NO_ERROR = 0,
    NOT_CONNECTED = 1,
    UNSUPPORTED_CHAIN = 2,
    INVALID_AMOUNT = 3,
    INSUFFICIENT_BALANCE = 4,
    EXCEEDING_CAPACITY = 5,
    AMOUNT_TOO_LOW = 6,
    INSUFFICIENT_DEBT = 7,
}

const SYNTH_ERRORS: any = {
    '1': 'CALLER_NOT_L0_ADMIN', // 'The caller of the function is not a pool admin'
    '2': 'CALLER_NOT_L1_ADMIN', // 'The caller of the function is not an emergency admin'
    '3': 'CALLER_NOT_L2_ADMIN', // 'The caller of the function is not a pool or emergency admin'
    '4': 'ASSET_NOT_ENABLED', // 'The collateral is not enabled
    '5': 'ACCOUNT_ALREADY_ENTERED', // 'The account has already entered the collateral
    '6': 'INSUFFICIENT_COLLATERAL', // 'The account has insufficient collateral
    '7': 'ZERO_AMOUNT', // 'The amount is zero
    '8': 'EXCEEDED_MAX_CAPACITY', // 'The amount exceeds the maximum capacity
    '9': 'INSUFFICIENT_BALANCE', // 'The account has insufficient balance
    '10': 'ASSET_NOT_ACTIVE', // 'The synth is not enabled
    '11': 'ASSET_NOT_FOUND', // 'The synth is not enabled
    '12': 'INSUFFICIENT_DEBT', // 'The account has insufficient debt'
    '13': 'INVALID_ARGUMENT', // 'The argument is invalid'
    '14': 'ASSET_ALREADY_ADDED', // 'The asset is already added'
    '15': 'NOT_AUTHORIZED', // 'The caller is not authorized'
    '16': 'TRANSFER_FAILED', // 'The transfer failed'
    '17': 'ACCOUNT_BELOW_LIQ_THRESHOLD', // 'The account is below the liquidation threshold'
    '18': 'ACCOUNT_NOT_ENTERED', // 'The account has not entered the collateral'
    '19': 'NOT_ENOUGH_SYX_TO_UNLOCK', // 'Not enough SYX to unlock'
    '20': 'REQUEST_ALREADY_EXISTS', // 'Request already exists'
    '21': 'REQUEST_DOES_NOT_EXIST', // 'Request does not exist'
    '22': 'UNLOCK_NOT_STARTED', // 'Unlock not started'
    '23': 'TOKEN_NOT_SUPPORTED',
    '24': 'ADDRESS_IS_CONTRACT',
    '25': 'INVALID_MERKLE_PROOF',
    '26': 'INVALID_TIME',
    '27': 'INVALID_AMOUNT',
    '28': 'INVALID_ADDRESS',
    '29': 'TIME_NOT_STARTED',
    '30': 'TIME_ENDED',
    '31': 'WITHDRAWING_MORE_THAN_ALLOWED',
    '32': 'ADDRESS_IS_NOT_CONTRACT',
    '33': 'ALREADY_SET',
}

export const formatSynthError = (err: any) => {
    const errorString = JSON.stringify(err);
    const errorCodeIndex = errorString.indexOf("execution reverted");
    const errorCode = errorString.slice(errorCodeIndex + 20, errorCodeIndex + 21);
    const errorCode2 = errorString.slice(errorCodeIndex + 21, errorCodeIndex + 22);
    if (errorCode2 === '"') {
        return SYNTH_ERRORS[errorCode];
    }
    return SYNTH_ERRORS[errorCode+errorCode2];
}

const LENDING_ERRORS: any = {
    '1': 'The caller of the function is not a pool admin',
    '2': 'The caller of the function is not an emergency admin',
    '3': 'The caller of the function is not a pool or emergency admin',
    '4': 'The caller of the function is not a risk or pool admin',
    '5': 'The caller of the function is not an asset listing or pool admin',
    '6': 'The caller of the function is not a bridge',
    '7': 'Pool addresses provider is not registered',
    '8': 'Invalid id for the pool addresses provider',
    '9': 'Address is not a contract',
    '10': 'The caller of the function is not the pool configurator',
    '11': 'The caller of the function is not an AToken',
    '12': 'The address of the pool addresses provider is invalid',
    '13': 'Invalid return value of the flashloan executor function',
    '14': 'Reserve has already been added to reserve list',
    '15': 'Maximum amount of reserves in the pool reached',
    '16': 'Zero eMode category is reserved for volatile heterogeneous assets',
    '17': 'Invalid eMode category assignment to asset',
    '18': 'The liquidity of the reserve needs to be 0',
    '19': 'Invalid flashloan premium',
    '20': 'Invalid risk parameters for the reserve',
    '21': 'Invalid risk parameters for the eMode category',
    '22': 'Invalid bridge protocol fee',
    '23': 'The caller of this function must be a pool',
    '24': 'Invalid amount to mint',
    '25': 'Invalid amount to burn',
    '26': 'Amount must be greater than 0',
    '27': 'Action requires an active reserve',
    '28': 'Action cannot be performed because the reserve is frozen',
    '29': 'Action cannot be performed because the reserve is paused',
    '30': 'Borrowing is not enabled',
    '31': 'Stable borrowing is not enabled',
    '32': 'You cannot withdraw more than the available balance',
    '33': 'Invalid interest rate mode selected',
    '34': 'The collateral balance is 0',
    '35': 'Health factor is lesser than the liquidation threshold',
    '36': 'There is not enough collateral to cover a new borrow',
    '37': 'Collateral is (mostly) the same currency that is being borrowed',
    '38': 'The requested amount is greater than the max loan size in stable rate mode',
    '39': 'For repayment of a specific type of debt, the user needs to have debt that type',
    '40': 'To repay on behalf of a user an explicit amount to repay is needed',
    '41': 'You do not have outstanding stable rate debt on this reserve',
    '42': 'You do not have outstanding variable rate debt on this reserve',
    '43': 'The underlying balance needs to be greater than 0',
    '44': 'Interest rate rebalance conditions were not met',
    '45': 'Health factor is not below the threshold',
    '46': 'The collateral chosen cannot be liquidated',
    '47': 'You did not borrow the specified currency',
    '49': 'Inconsistent flashloan parameters',
    '50': 'Borrow cap is exceeded',
    '51': 'Supply cap is exceeded',
    '52': 'Unbacked mint cap is exceeded',
    '53': 'Debt ceiling is exceeded',
    '54': 'Claimable rights over underlying not zero (aToken supply or accruedToTreasury)',
    '55': 'Stable debt supply is not zero',
    '56': 'Variable debt supply is not zero',
    '57': 'Ltv validation failed',
    '58': 'Unable to set eMode. Please repay assets that are not in eMode', // Inconsistent eMode category.
    '59': 'Price oracle sentinel validation failed',
    '60': 'Asset is not borrowable in isolation mode',
    '61': 'Reserve has already been initialized',
    '62': 'You are in isolation mode',
    '63': 'Invalid ltv parameter for the reserve',
    '64': 'Invalid liquidity threshold parameter for the reserve',
    '65': 'Invalid liquidity bonus parameter for the reserve',
    '66': 'Invalid decimals parameter of the underlying asset of the reserve',
    '67': 'Invalid reserve factor parameter for the reserve',
    '68': 'Invalid borrow cap for the reserve',
    '69': 'Invalid supply cap for the reserve',
    '70': 'Invalid liquidation protocol fee for the reserve',
    '71': 'Invalid eMode category for the reserve',
    '72': 'Invalid unbacked mint cap for the reserve',
    '73': 'Invalid debt ceiling for the reserve',
    '74': 'Invalid reserve index',
    '75': 'ACL admin cannot be set to the zero address',
    '76': 'Array parameters that should be equal length are not',
    '77': 'Zero address not valid',
    '78': 'Invalid expiration',
    '79': 'Invalid signature',
    '80': 'Operation not supported',
    '81': 'Debt ceiling is not zero',
    '82': 'Asset is not listed',
    '83': 'Invalid optimal usage ratio',
    '84': 'Invalid optimal stable to total debt ratio',
    '85': 'The underlying asset cannot be rescued',
    '86': 'Reserve has already been added to reserve list',
    '87': 'The token implementation pool address and the pool address provided by the initializing pool do not match',
    '88': 'Stable borrowing is enabled',
    '89': 'You are trying to borrow multiple assets including a siloed one',
    '90': 'The total debt of the reserve needs to be 0',
    '91': 'FlashLoaning for this asset is disabled',
}

export const formatLendingError = (err: any) => {
    const errorString = JSON.stringify(err);
    const errorCodeIndex = errorString.indexOf("execution reverted");
    const errorCode = errorString.slice(errorCodeIndex + 20, errorCodeIndex + 21);
    const errorCode2 = errorString.slice(errorCodeIndex + 21, errorCodeIndex + 22);
    if (errorCode2 === '"') {
        return LENDING_ERRORS[errorCode];
    } 
    
    return LENDING_ERRORS[errorCode+errorCode2];
}

const BAL_ERRORS: any = {
    '000': 'ADD_OVERFLOW',
    '001': 'SUB_OVERFLOW',
    '002': 'SUB_UNDERFLOW',
    '003': 'MUL_OVERFLOW',
    '004': 'ZERO_DIVISION',
    '005': 'DIV_INTERNAL',
    '006': 'X_OUT_OF_BOUNDS',
    '007': 'Y_OUT_OF_BOUNDS',
    '008': 'PRODUCT_OUT_OF_BOUNDS',
    '009': 'INVALID_EXPONENT',
    '100': 'OUT_OF_BOUNDS',
    '101': 'UNSORTED_ARRAY',
    '102': 'UNSORTED_TOKENS',
    '103': 'INPUT_LENGTH_MISMATCH',
    '104': 'ZERO_TOKEN',
    '105': 'INSUFFICIENT_DATA',
    '200': 'MIN_TOKENS',
    '201': 'MAX_TOKENS',
    '202': 'MAX_SWAP_FEE_PERCENTAGE',
    '203': 'MIN_SWAP_FEE_PERCENTAGE',
    '204': 'MINIMUM_BPT',
    '205': 'CALLER_NOT_VAULT',
    '206': 'UNINITIALIZED',
    '207': 'BPT_IN_MAX_AMOUNT',
    '208': 'BPT_OUT_MIN_AMOUNT',
    '209': 'EXPIRED_PERMIT',
    '210': 'NOT_TWO_TOKENS',
    '211': 'DISABLED',
    '300': 'MIN_AMP',
    '301': 'MAX_AMP',
    '302': 'MIN_WEIGHT',
    '303': 'MAX_STABLE_TOKENS',
    '304': 'MAX_IN_RATIO',
    '305': 'MAX_OUT_RATIO',
    '306': 'MIN_BPT_IN_FOR_TOKEN_OUT',
    '307': 'MAX_OUT_BPT_FOR_TOKEN_IN',
    '308': 'NORMALIZED_WEIGHT_INVARIANT',
    '309': 'INVALID_TOKEN',
    '310': 'UNHANDLED_JOIN_KIND',
    '311': 'ZERO_INVARIANT',
    '312': 'ORACLE_INVALID_SECONDS_QUERY',
    '313': 'ORACLE_NOT_INITIALIZED',
    '314': 'ORACLE_QUERY_TOO_OLD',
    '315': 'ORACLE_INVALID_INDEX',
    '316': 'ORACLE_BAD_SECS',
    '317': 'AMP_END_TIME_TOO_CLOSE',
    '318': 'AMP_ONGOING_UPDATE',
    '319': 'AMP_RATE_TOO_HIGH',
    '320': 'AMP_NO_ONGOING_UPDATE',
    '321': 'STABLE_INVARIANT_DIDNT_CONVERGE',
    '322': 'STABLE_GET_BALANCE_DIDNT_CONVERGE',
    '323': 'RELAYER_NOT_CONTRACT',
    '324': 'BASE_POOL_RELAYER_NOT_CALLED',
    '325': 'REBALANCING_RELAYER_REENTERED',
    '326': 'GRADUAL_UPDATE_TIME_TRAVEL',
    '327': 'SWAPS_DISABLED',
    '328': 'CALLER_IS_NOT_LBP_OWNER',
    '329': 'PRICE_RATE_OVERFLOW',
    '330': 'INVALID_JOIN_EXIT_KIND_WHILE_SWAPS_DISABLED',
    '331': 'WEIGHT_CHANGE_TOO_FAST',
    '332': 'LOWER_GREATER_THAN_UPPER_TARGET',
    '333': 'UPPER_TARGET_TOO_HIGH',
    '334': 'UNHANDLED_BY_LINEAR_POOL',
    '335': 'OUT_OF_TARGET_RANGE',
    '336': 'UNHANDLED_EXIT_KIND',
    '337': 'UNAUTHORIZED_EXIT',
    '338': 'MAX_MANAGEMENT_SWAP_FEE_PERCENTAGE',
    '339': 'UNHANDLED_BY_MANAGED_POOL',
    '340': 'UNHANDLED_BY_PHANTOM_POOL',
    '341': 'TOKEN_DOES_NOT_HAVE_RATE_PROVIDER',
    '342': 'INVALID_INITIALIZATION',
    '343': 'OUT_OF_NEW_TARGET_RANGE',
    '344': 'FEATURE_DISABLED',
    '345': 'UNINITIALIZED_POOL_CONTROLLER',
    '346': 'SET_SWAP_FEE_DURING_FEE_CHANGE',
    '347': 'SET_SWAP_FEE_PENDING_FEE_CHANGE',
    '348': 'CHANGE_TOKENS_DURING_WEIGHT_CHANGE',
    '349': 'CHANGE_TOKENS_PENDING_WEIGHT_CHANGE',
    '350': 'MAX_WEIGHT',
    '351': 'UNAUTHORIZED_JOIN',
    '352': 'MAX_MANAGEMENT_AUM_FEE_PERCENTAGE',
    '353': 'FRACTIONAL_TARGET',
    '354': 'ADD_OR_REMOVE_BPT',
    '355': 'INVALID_CIRCUIT_BREAKER_BOUNDS',
    '356': 'CIRCUIT_BREAKER_TRIPPED',
    '357': 'MALICIOUS_QUERY_REVERT',
    '358': 'JOINS_EXITS_DISABLED',
    '400': 'REENTRANCY',
    '401': 'SENDER_NOT_ALLOWED',
    '402': 'PAUSED',
    '403': 'PAUSE_WINDOW_EXPIRED',
    '404': 'MAX_PAUSE_WINDOW_DURATION',
    '405': 'MAX_BUFFER_PERIOD_DURATION',
    '406': 'INSUFFICIENT_BALANCE',
    '407': 'INSUFFICIENT_ALLOWANCE',
    '408': 'ERC20_TRANSFER_FROM_ZERO_ADDRESS',
    '409': 'ERC20_TRANSFER_TO_ZERO_ADDRESS',
    '410': 'ERC20_MINT_TO_ZERO_ADDRESS',
    '411': 'ERC20_BURN_FROM_ZERO_ADDRESS',
    '412': 'ERC20_APPROVE_FROM_ZERO_ADDRESS',
    '413': 'ERC20_APPROVE_TO_ZERO_ADDRESS',
    '414': 'ERC20_TRANSFER_EXCEEDS_ALLOWANCE',
    '415': 'ERC20_DECREASED_ALLOWANCE_BELOW_ZERO',
    '416': 'ERC20_TRANSFER_EXCEEDS_BALANCE',
    '417': 'ERC20_BURN_EXCEEDS_ALLOWANCE',
    '418': 'SAFE_ERC20_CALL_FAILED',
    '419': 'ADDRESS_INSUFFICIENT_BALANCE',
    '420': 'ADDRESS_CANNOT_SEND_VALUE',
    '421': 'SAFE_CAST_VALUE_CANT_FIT_INT256',
    '422': 'GRANT_SENDER_NOT_ADMIN',
    '423': 'REVOKE_SENDER_NOT_ADMIN',
    '424': 'RENOUNCE_SENDER_NOT_ALLOWED',
    '425': 'BUFFER_PERIOD_EXPIRED',
    '426': 'CALLER_IS_NOT_OWNER',
    '427': 'NEW_OWNER_IS_ZERO',
    '428': 'CODE_DEPLOYMENT_FAILED',
    '429': 'CALL_TO_NON_CONTRACT',
    '430': 'LOW_LEVEL_CALL_FAILED',
    '431': 'NOT_PAUSED',
    '432': 'ADDRESS_ALREADY_ALLOWLISTED',
    '433': 'ADDRESS_NOT_ALLOWLISTED',
    '434': 'ERC20_BURN_EXCEEDS_BALANCE',
    '435': 'INVALID_OPERATION',
    '436': 'CODEC_OVERFLOW',
    '437': 'IN_RECOVERY_MODE',
    '438': 'NOT_IN_RECOVERY_MODE',
    '439': 'INDUCED_FAILURE',
    '440': 'EXPIRED_SIGNATURE',
    '441': 'MALFORMED_SIGNATURE',
    '442': 'SAFE_CAST_VALUE_CANT_FIT_UINT64',
    '443': 'UNHANDLED_FEE_TYPE',
    '444': 'BURN_FROM_ZERO',
    '500': 'INVALID_POOL_ID',
    '501': 'CALLER_NOT_POOL',
    '502': 'SENDER_NOT_ASSET_MANAGER',
    '503': 'USER_DOESNT_ALLOW_RELAYER',
    '504': 'INVALID_SIGNATURE',
    '505': 'EXIT_BELOW_MIN',
    '506': 'JOIN_ABOVE_MAX',
    '507': 'Slippage above max. Please increase max slippage', // 'SWAP_LIMIT'
    '508': 'SWAP_DEADLINE',
    '509': 'CANNOT_SWAP_SAME_TOKEN',
    '510': 'UNKNOWN_AMOUNT_IN_FIRST_SWAP',
    '511': 'MALCONSTRUCTED_MULTIHOP_SWAP',
    '512': 'INTERNAL_BALANCE_OVERFLOW',
    '513': 'INSUFFICIENT_INTERNAL_BALANCE',
    '514': 'INVALID_ETH_INTERNAL_BALANCE',
    '515': 'INVALID_POST_LOAN_BALANCE',
    '516': 'INSUFFICIENT_ETH',
    '517': 'UNALLOCATED_ETH',
    '518': 'ETH_TRANSFER',
    '519': 'CANNOT_USE_ETH_SENTINEL',
    '520': 'TOKENS_MISMATCH',
    '521': 'TOKEN_NOT_REGISTERED',
    '522': 'TOKEN_ALREADY_REGISTERED',
    '523': 'TOKENS_ALREADY_SET',
    '524': 'TOKENS_LENGTH_MUST_BE_2',
    '525': 'NONZERO_TOKEN_BALANCE',
    '526': 'BALANCE_TOTAL_OVERFLOW',
    '527': 'POOL_NO_TOKENS',
    '528': 'INSUFFICIENT_FLASH_LOAN_BALANCE',
    '600': 'SWAP_FEE_PERCENTAGE_TOO_HIGH',
    '601': 'FLASH_LOAN_FEE_PERCENTAGE_TOO_HIGH',
    '602': 'INSUFFICIENT_FLASH_LOAN_FEE_AMOUNT',
    '603': 'AUM_FEE_PERCENTAGE_TOO_HIGH',
    '700': 'SPLITTER_FEE_PERCENTAGE_TOO_HIGH',
    '998': 'UNIMPLEMENTED',
    '999': 'SHOULD_NOT_HAPPEN',
};
  

export const formatBalError = (err: any) => {
    const errorString = JSON.stringify(err);
    const errorCodeIndex = errorString.indexOf("execution reverted: BAL#");
    const errorCode = errorString.slice(errorCodeIndex+24, errorCodeIndex+27);
    return BAL_ERRORS[errorCode];
}