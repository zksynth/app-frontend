{
  "contractName": "MockERC20",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "symbol",
          "type": "string"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": "0x60806040523480156200001157600080fd5b50d380156200001f57600080fd5b50d280156200002d57600080fd5b5060405162000ef938038062000ef983398101604081905262000050916200030b565b81518290829062000069906003906020850190620001ae565b5080516200007f906004906020840190620001ae565b505050620000b93362000097620000c160201b60201c565b620000a490600a620003d9565b620000b39062989680620004a7565b620000c6565b505062000532565b601290565b6001600160a01b038216620001215760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015260640160405180910390fd5b806002600082825462000135919062000375565b90915550506001600160a01b038216600090815260208190526040812080548392906200016490849062000375565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b828054620001bc90620004c9565b90600052602060002090601f016020900481019282620001e057600085556200022b565b82601f10620001fb57805160ff19168380011785556200022b565b828001600101855582156200022b579182015b828111156200022b5782518255916020019190600101906200020e565b50620002399291506200023d565b5090565b5b808211156200023957600081556001016200023e565b600082601f8301126200026657600080fd5b81516001600160401b03808211156200028357620002836200051c565b604051601f8301601f19908116603f01168101908282118183101715620002ae57620002ae6200051c565b81604052838152602092508683858801011115620002cb57600080fd5b600091505b83821015620002ef5785820183015181830184015290820190620002d0565b83821115620003015760008385830101525b9695505050505050565b600080604083850312156200031f57600080fd5b82516001600160401b03808211156200033757600080fd5b620003458683870162000254565b935060208501519150808211156200035c57600080fd5b506200036b8582860162000254565b9150509250929050565b600082198211156200038b576200038b62000506565b500190565b600181815b80851115620003d1578160001904821115620003b557620003b562000506565b80851615620003c357918102915b93841c939080029062000395565b509250929050565b6000620003ea60ff841683620003f1565b9392505050565b6000826200040257506001620004a1565b816200041157506000620004a1565b81600181146200042a5760028114620004355762000455565b6001915050620004a1565b60ff84111562000449576200044962000506565b50506001821b620004a1565b5060208310610133831016604e8410600b84101617156200047a575081810a620004a1565b62000486838362000390565b80600019048211156200049d576200049d62000506565b0290505b92915050565b6000816000190483118215151615620004c457620004c462000506565b500290565b600181811c90821680620004de57607f821691505b602082108114156200050057634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052604160045260246000fd5b6109b780620005426000396000f3fe608060405234801561001057600080fd5b50d3801561001d57600080fd5b50d2801561002a57600080fd5b50600436106100e35760003560e01c8063395093511161009b578063a457c2d711610075578063a457c2d7146101a1578063a9059cbb146101b4578063dd62ed3e146101c757600080fd5b8063395093511461015d57806370a082311461017057806395d89b411461019957600080fd5b806318160ddd116100cc57806318160ddd1461012957806323b872dd1461013b578063313ce5671461014e57600080fd5b806306fdde03146100e8578063095ea7b314610106575b600080fd5b6100f0610200565b6040516100fd91906108cb565b60405180910390f35b6101196101143660046108a1565b610292565b60405190151581526020016100fd565b6002545b6040519081526020016100fd565b610119610149366004610865565b6102aa565b604051601281526020016100fd565b61011961016b3660046108a1565b6102ce565b61012d61017e366004610810565b6001600160a01b031660009081526020819052604090205490565b6100f061030d565b6101196101af3660046108a1565b61031c565b6101196101c23660046108a1565b6103cb565b61012d6101d5366004610832565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b60606003805461020f90610946565b80601f016020809104026020016040519081016040528092919081815260200182805461023b90610946565b80156102885780601f1061025d57610100808354040283529160200191610288565b820191906000526020600020905b81548152906001019060200180831161026b57829003601f168201915b5050505050905090565b6000336102a08185856103d9565b5060019392505050565b6000336102b8858285610531565b6102c38585856105c3565b506001949350505050565b3360008181526001602090815260408083206001600160a01b03871684529091528120549091906102a09082908690610308908790610920565b6103d9565b60606004805461020f90610946565b3360008181526001602090815260408083206001600160a01b0387168452909152812054909190838110156103be5760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760448201527f207a65726f00000000000000000000000000000000000000000000000000000060648201526084015b60405180910390fd5b6102c382868684036103d9565b6000336102a08185856105c3565b6001600160a01b0383166104545760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460448201527f726573730000000000000000000000000000000000000000000000000000000060648201526084016103b5565b6001600160a01b0382166104d05760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f20616464726560448201527f737300000000000000000000000000000000000000000000000000000000000060648201526084016103b5565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6001600160a01b0383811660009081526001602090815260408083209386168352929052205460001981146105bd57818110156105b05760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e636500000060448201526064016103b5565b6105bd84848484036103d9565b50505050565b6001600160a01b03831661063f5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f20616460448201527f647265737300000000000000000000000000000000000000000000000000000060648201526084016103b5565b6001600160a01b0382166106bb5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201527f657373000000000000000000000000000000000000000000000000000000000060648201526084016103b5565b6001600160a01b0383166000908152602081905260409020548181101561074a5760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e742065786365656473206260448201527f616c616e6365000000000000000000000000000000000000000000000000000060648201526084016103b5565b6001600160a01b03808516600090815260208190526040808220858503905591851681529081208054849290610781908490610920565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516107cd91815260200190565b60405180910390a36105bd565b6000813574ffffffffffffffffffffffffffffffffffffffffff8116811461080157600080fd5b6001600160a01b031692915050565b60006020828403121561082257600080fd5b61082b826107da565b9392505050565b6000806040838503121561084557600080fd5b61084e836107da565b915061085c602084016107da565b90509250929050565b60008060006060848603121561087a57600080fd5b610883846107da565b9250610891602085016107da565b9150604084013590509250925092565b600080604083850312156108b457600080fd5b6108bd836107da565b946020939093013593505050565b600060208083528351808285015260005b818110156108f8578581018301518582016040015282016108dc565b8181111561090a576000604083870101525b50601f01601f1916929092016040019392505050565b6000821982111561094157634e487b7160e01b600052601160045260246000fd5b500190565b600181811c9082168061095a57607f821691505b6020821081141561097b57634e487b7160e01b600052602260045260246000fd5b5091905056fea26474726f6e58221220debcaf76de154ecfb5463583279343e664bc43a87606ad9976885844e5d8b92764736f6c63430008060033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50d3801561001d57600080fd5b50d2801561002a57600080fd5b50600436106100e35760003560e01c8063395093511161009b578063a457c2d711610075578063a457c2d7146101a1578063a9059cbb146101b4578063dd62ed3e146101c757600080fd5b8063395093511461015d57806370a082311461017057806395d89b411461019957600080fd5b806318160ddd116100cc57806318160ddd1461012957806323b872dd1461013b578063313ce5671461014e57600080fd5b806306fdde03146100e8578063095ea7b314610106575b600080fd5b6100f0610200565b6040516100fd91906108cb565b60405180910390f35b6101196101143660046108a1565b610292565b60405190151581526020016100fd565b6002545b6040519081526020016100fd565b610119610149366004610865565b6102aa565b604051601281526020016100fd565b61011961016b3660046108a1565b6102ce565b61012d61017e366004610810565b6001600160a01b031660009081526020819052604090205490565b6100f061030d565b6101196101af3660046108a1565b61031c565b6101196101c23660046108a1565b6103cb565b61012d6101d5366004610832565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b60606003805461020f90610946565b80601f016020809104026020016040519081016040528092919081815260200182805461023b90610946565b80156102885780601f1061025d57610100808354040283529160200191610288565b820191906000526020600020905b81548152906001019060200180831161026b57829003601f168201915b5050505050905090565b6000336102a08185856103d9565b5060019392505050565b6000336102b8858285610531565b6102c38585856105c3565b506001949350505050565b3360008181526001602090815260408083206001600160a01b03871684529091528120549091906102a09082908690610308908790610920565b6103d9565b60606004805461020f90610946565b3360008181526001602090815260408083206001600160a01b0387168452909152812054909190838110156103be5760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760448201527f207a65726f00000000000000000000000000000000000000000000000000000060648201526084015b60405180910390fd5b6102c382868684036103d9565b6000336102a08185856105c3565b6001600160a01b0383166104545760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460448201527f726573730000000000000000000000000000000000000000000000000000000060648201526084016103b5565b6001600160a01b0382166104d05760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f20616464726560448201527f737300000000000000000000000000000000000000000000000000000000000060648201526084016103b5565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6001600160a01b0383811660009081526001602090815260408083209386168352929052205460001981146105bd57818110156105b05760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e636500000060448201526064016103b5565b6105bd84848484036103d9565b50505050565b6001600160a01b03831661063f5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f20616460448201527f647265737300000000000000000000000000000000000000000000000000000060648201526084016103b5565b6001600160a01b0382166106bb5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201527f657373000000000000000000000000000000000000000000000000000000000060648201526084016103b5565b6001600160a01b0383166000908152602081905260409020548181101561074a5760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e742065786365656473206260448201527f616c616e6365000000000000000000000000000000000000000000000000000060648201526084016103b5565b6001600160a01b03808516600090815260208190526040808220858503905591851681529081208054849290610781908490610920565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516107cd91815260200190565b60405180910390a36105bd565b6000813574ffffffffffffffffffffffffffffffffffffffffff8116811461080157600080fd5b6001600160a01b031692915050565b60006020828403121561082257600080fd5b61082b826107da565b9392505050565b6000806040838503121561084557600080fd5b61084e836107da565b915061085c602084016107da565b90509250929050565b60008060006060848603121561087a57600080fd5b610883846107da565b9250610891602085016107da565b9150604084013590509250925092565b600080604083850312156108b457600080fd5b6108bd836107da565b946020939093013593505050565b600060208083528351808285015260005b818110156108f8578581018301518582016040015282016108dc565b8181111561090a576000604083870101525b50601f01601f1916929092016040019392505050565b6000821982111561094157634e487b7160e01b600052601160045260246000fd5b500190565b600181811c9082168061095a57607f821691505b6020821081141561097b57634e487b7160e01b600052602260045260246000fd5b5091905056fea26474726f6e58221220debcaf76de154ecfb5463583279343e664bc43a87606ad9976885844e5d8b92764736f6c63430008060033",
  "sourceMap": "114:175:28:-:0;;;148:139;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2044:13:37;;208:4:28;;214:6;;2044:13:37;;:5;;:13;;;;;:::i;:::-;-1:-1:-1;2067:17:37;;;;:7;;:17;;;;;:::i;:::-;;1978:113;;232:48:28::1;238:10;269;:8;;;:10;;:::i;:::-;263:16;::::0;:2:::1;:16;:::i;:::-;250:29;::::0;:10:::1;:29;:::i;:::-;232:5;:48::i;:::-;148:139:::0;;114:175;;3093:91:37;3175:2;;3093:91::o;8402:389::-;-1:-1:-1;;;;;8485:21:37;;8477:65;;;;-1:-1:-1;;;8477:65:37;;1673:2:52;8477:65:37;;;1655:21:52;1712:2;1692:18;;;1685:30;1751:33;1731:18;;;1724:61;1802:18;;8477:65:37;;;;;;;;8629:6;8613:12;;:22;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;;;8645:18:37;;:9;:18;;;;;;;;;;:28;;8667:6;;8645:9;:28;;8667:6;;8645:28;:::i;:::-;;;;-1:-1:-1;;8688:37:37;;1977:25:52;;;-1:-1:-1;;;;;8688:37:37;;;8705:1;;8688:37;;1965:2:52;1950:18;8688:37:37;;;;;;;8402:389;;:::o;114:175:28:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;114:175:28;;;-1:-1:-1;114:175:28;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:885:52;68:5;121:3;114:4;106:6;102:17;98:27;88:2;;139:1;136;129:12;88:2;162:13;;-1:-1:-1;;;;;224:10:52;;;221:2;;;237:18;;:::i;:::-;312:2;306:9;280:2;366:13;;-1:-1:-1;;362:22:52;;;386:2;358:31;354:40;342:53;;;410:18;;;430:22;;;407:46;404:2;;;456:18;;:::i;:::-;496:10;492:2;485:22;531:2;523:6;516:18;553:4;543:14;;598:3;593:2;588;580:6;576:15;572:24;569:33;566:2;;;615:1;612;605:12;566:2;637:1;628:10;;647:133;661:2;658:1;655:9;647:133;;;749:14;;;745:23;;739:30;718:14;;;714:23;;707:63;672:10;;;;647:133;;;798:2;795:1;792:9;789:2;;;857:1;852:2;847;839:6;835:15;831:24;824:35;789:2;887:6;78:821;-1:-1:-1;;;;;;78:821:52:o;904:562::-;1003:6;1011;1064:2;1052:9;1043:7;1039:23;1035:32;1032:2;;;1080:1;1077;1070:12;1032:2;1107:16;;-1:-1:-1;;;;;1172:14:52;;;1169:2;;;1199:1;1196;1189:12;1169:2;1222:61;1275:7;1266:6;1255:9;1251:22;1222:61;:::i;:::-;1212:71;;1329:2;1318:9;1314:18;1308:25;1292:41;;1358:2;1348:8;1345:16;1342:2;;;1374:1;1371;1364:12;1342:2;;1397:63;1452:7;1441:8;1430:9;1426:24;1397:63;:::i;:::-;1387:73;;;1022:444;;;;;:::o;2013:128::-;2053:3;2084:1;2080:6;2077:1;2074:13;2071:2;;;2090:18;;:::i;:::-;-1:-1:-1;2126:9:52;;2061:80::o;2146:422::-;2235:1;2278:5;2235:1;2292:270;2313:7;2303:8;2300:21;2292:270;;;2372:4;2368:1;2364:6;2360:17;2354:4;2351:27;2348:2;;;2381:18;;:::i;:::-;2431:7;2421:8;2417:22;2414:2;;;2451:16;;;;2414:2;2530:22;;;;2490:15;;;;2292:270;;;2296:3;2210:358;;;;;:::o;2573:140::-;2631:5;2660:47;2701:4;2691:8;2687:19;2681:4;2660:47;:::i;:::-;2651:56;2641:72;-1:-1:-1;;;2641:72:52:o;2718:806::-;2767:5;2797:8;2787:2;;-1:-1:-1;2838:1:52;2852:5;;2787:2;2886:4;2876:2;;-1:-1:-1;2923:1:52;2937:5;;2876:2;2968:4;2986:1;2981:59;;;;3054:1;3049:130;;;;2961:218;;2981:59;3011:1;3002:10;;3025:5;;;3049:130;3086:3;3076:8;3073:17;3070:2;;;3093:18;;:::i;:::-;-1:-1:-1;;3149:1:52;3135:16;;3164:5;;2961:218;;3263:2;3253:8;3250:16;3244:3;3238:4;3235:13;3231:36;3225:2;3215:8;3212:16;3207:2;3201:4;3198:12;3194:35;3191:77;3188:2;;;-1:-1:-1;3300:19:52;;;3332:5;;3188:2;3379:34;3404:8;3398:4;3379:34;:::i;:::-;3449:6;3445:1;3441:6;3437:19;3428:7;3425:32;3422:2;;;3460:18;;:::i;:::-;3498:20;;-1:-1:-1;2777:747:52;;;;;:::o;3529:168::-;3569:7;3635:1;3631;3627:6;3623:14;3620:1;3617:21;3612:1;3605:9;3598:17;3594:45;3591:2;;;3642:18;;:::i;:::-;-1:-1:-1;3682:9:52;;3581:116::o;3702:380::-;3781:1;3777:12;;;;3824;;;3845:2;;3899:4;3891:6;3887:17;3877:27;;3845:2;3952;3944:6;3941:14;3921:18;3918:38;3915:2;;;3998:10;3993:3;3989:20;3986:1;3979:31;4033:4;4030:1;4023:15;4061:4;4058:1;4051:15;3915:2;;3757:325;;;:::o;4087:127::-;4148:10;4143:3;4139:20;4136:1;4129:31;4179:4;4176:1;4169:15;4203:4;4200:1;4193:15;4219:127;4280:10;4275:3;4271:20;4268:1;4261:31;4311:4;4308:1;4301:15;4335:4;4332:1;4325:15;4251:95;114:175:28;;;;;;",
  "deployedSourceMap": "114:175:28:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2156:98:37;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4433:197;;;;;;:::i;:::-;;:::i;:::-;;;1514:14:52;;1507:22;1489:41;;1477:2;1462:18;4433:197:37;1444:92:52;3244:106:37;3331:12;;3244:106;;;5078:25:52;;;5066:2;5051:18;3244:106:37;5033:76:52;5192:286:37;;;;;;:::i;:::-;;:::i;3093:91::-;;;3175:2;5256:36:52;;5244:2;5229:18;3093:91:37;5211:87:52;5873:234:37;;;;;;:::i;:::-;;:::i;3408:125::-;;;;;;:::i;:::-;-1:-1:-1;;;;;3508:18:37;3482:7;3508:18;;;;;;;;;;;;3408:125;2367:102;;;:::i;6594:427::-;;;;;;:::i;:::-;;:::i;3729:189::-;;;;;;:::i;:::-;;:::i;3976:149::-;;;;;;:::i;:::-;-1:-1:-1;;;;;4091:18:37;;;4065:7;4091:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;3976:149;2156:98;2210:13;2242:5;2235:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2156:98;:::o;4433:197::-;4516:4;719:10:40;4570:32:37;719:10:40;4586:7:37;4595:6;4570:8;:32::i;:::-;-1:-1:-1;4619:4:37;;4433:197;-1:-1:-1;;;4433:197:37:o;5192:286::-;5319:4;719:10:40;5375:38:37;5391:4;719:10:40;5406:6:37;5375:15;:38::i;:::-;5423:27;5433:4;5439:2;5443:6;5423:9;:27::i;:::-;-1:-1:-1;5467:4:37;;5192:286;-1:-1:-1;;;;5192:286:37:o;5873:234::-;719:10:40;5961:4:37;4091:18;;;:11;:18;;;;;;;;-1:-1:-1;;;;;4091:27:37;;;;;;;;;;5961:4;;719:10:40;6015:64:37;;719:10:40;;4091:27:37;;6040:38;;6068:10;;6040:38;:::i;:::-;6015:8;:64::i;2367:102::-;2423:13;2455:7;2448:14;;;;;:::i;6594:427::-;719:10:40;6687:4:37;4091:18;;;:11;:18;;;;;;;;-1:-1:-1;;;;;4091:27:37;;;;;;;;;;6687:4;;719:10:40;6831:15:37;6811:16;:35;;6803:85;;;;-1:-1:-1;;;6803:85:37;;4728:2:52;6803:85:37;;;4710:21:52;4767:2;4747:18;;;4740:30;4806:34;4786:18;;;4779:62;4877:7;4857:18;;;4850:35;4902:19;;6803:85:37;;;;;;;;;6922:60;6931:5;6938:7;6966:15;6947:16;:34;6922:8;:60::i;3729:189::-;3808:4;719:10:40;3862:28:37;719:10:40;3879:2:37;3883:6;3862:9;:28::i;10110:370::-;-1:-1:-1;;;;;10241:19:37;;10233:68;;;;-1:-1:-1;;;10233:68:37;;4323:2:52;10233:68:37;;;4305:21:52;4362:2;4342:18;;;4335:30;4401:34;4381:18;;;4374:62;4472:6;4452:18;;;4445:34;4496:19;;10233:68:37;4295:226:52;10233:68:37;-1:-1:-1;;;;;10319:21:37;;10311:68;;;;-1:-1:-1;;;10311:68:37;;2749:2:52;10311:68:37;;;2731:21:52;2788:2;2768:18;;;2761:30;2827:34;2807:18;;;2800:62;2898:4;2878:18;;;2871:32;2920:19;;10311:68:37;2721:224:52;10311:68:37;-1:-1:-1;;;;;10390:18:37;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;10441:32;;5078:25:52;;;10441:32:37;;5051:18:52;10441:32:37;;;;;;;10110:370;;;:::o;10761:441::-;-1:-1:-1;;;;;4091:18:37;;;10891:24;4091:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;-1:-1:-1;;10957:37:37;;10953:243;;11038:6;11018:16;:26;;11010:68;;;;-1:-1:-1;;;11010:68:37;;3152:2:52;11010:68:37;;;3134:21:52;3191:2;3171:18;;;3164:30;3230:31;3210:18;;;3203:59;3279:18;;11010:68:37;3124:179:52;11010:68:37;11120:51;11129:5;11136:7;11164:6;11145:16;:25;11120:8;:51::i;:::-;10881:321;10761:441;;;:::o;7475:651::-;-1:-1:-1;;;;;7601:18:37;;7593:68;;;;-1:-1:-1;;;7593:68:37;;3917:2:52;7593:68:37;;;3899:21:52;3956:2;3936:18;;;3929:30;3995:34;3975:18;;;3968:62;4066:7;4046:18;;;4039:35;4091:19;;7593:68:37;3889:227:52;7593:68:37;-1:-1:-1;;;;;7679:16:37;;7671:64;;;;-1:-1:-1;;;7671:64:37;;2345:2:52;7671:64:37;;;2327:21:52;2384:2;2364:18;;;2357:30;2423:34;2403:18;;;2396:62;2494:5;2474:18;;;2467:33;2517:19;;7671:64:37;2317:225:52;7671:64:37;-1:-1:-1;;;;;7817:15:37;;7795:19;7817:15;;;;;;;;;;;7850:21;;;;7842:72;;;;-1:-1:-1;;;7842:72:37;;3510:2:52;7842:72:37;;;3492:21:52;3549:2;3529:18;;;3522:30;3588:34;3568:18;;;3561:62;3659:8;3639:18;;;3632:36;3685:19;;7842:72:37;3482:228:52;7842:72:37;-1:-1:-1;;;;;7948:15:37;;;:9;:15;;;;;;;;;;;7966:20;;;7948:38;;8006:13;;;;;;;;:23;;7980:6;;7948:9;8006:23;;7980:6;;8006:23;:::i;:::-;;;;;;;;8060:2;-1:-1:-1;;;;;8045:26:37;8054:4;-1:-1:-1;;;;;8045:26:37;;8064:6;8045:26;;;;5078:25:52;;5066:2;5051:18;;5033:76;8045:26:37;;;;;;;;8082:37;11786:121;14:282:52;53:5;101:6;88:20;152:44;143:7;139:58;130:7;127:71;117:2;;212:1;209;202:12;117:2;-1:-1:-1;;;;;234:56:52;;63:233;-1:-1:-1;;63:233:52:o;301:186::-;360:6;413:2;401:9;392:7;388:23;384:32;381:2;;;429:1;426;419:12;381:2;452:29;471:9;452:29;:::i;:::-;442:39;371:116;-1:-1:-1;;;371:116:52:o;492:260::-;560:6;568;621:2;609:9;600:7;596:23;592:32;589:2;;;637:1;634;627:12;589:2;660:29;679:9;660:29;:::i;:::-;650:39;;708:38;742:2;731:9;727:18;708:38;:::i;:::-;698:48;;579:173;;;;;:::o;757:328::-;834:6;842;850;903:2;891:9;882:7;878:23;874:32;871:2;;;919:1;916;909:12;871:2;942:29;961:9;942:29;:::i;:::-;932:39;;990:38;1024:2;1013:9;1009:18;990:38;:::i;:::-;980:48;;1075:2;1064:9;1060:18;1047:32;1037:42;;861:224;;;;;:::o;1090:254::-;1158:6;1166;1219:2;1207:9;1198:7;1194:23;1190:32;1187:2;;;1235:1;1232;1225:12;1187:2;1258:29;1277:9;1258:29;:::i;:::-;1248:39;1334:2;1319:18;;;;1306:32;;-1:-1:-1;;;1177:167:52:o;1541:597::-;1653:4;1682:2;1711;1700:9;1693:21;1743:6;1737:13;1786:6;1781:2;1770:9;1766:18;1759:34;1811:1;1821:140;1835:6;1832:1;1829:13;1821:140;;;1930:14;;;1926:23;;1920:30;1896:17;;;1915:2;1892:26;1885:66;1850:10;;1821:140;;;1979:6;1976:1;1973:13;1970:2;;;2049:1;2044:2;2035:6;2024:9;2020:22;2016:31;2009:42;1970:2;-1:-1:-1;2122:2:52;2101:15;-1:-1:-1;;2097:29:52;2082:45;;;;2129:2;2078:54;;1662:476;-1:-1:-1;;;1662:476:52:o;5303:282::-;5343:3;5374:1;5370:6;5367:1;5364:13;5361:2;;;-1:-1:-1;;;5407:1:52;5400:88;5511:4;5508:1;5501:15;5539:4;5536:1;5529:15;5361:2;-1:-1:-1;5570:9:52;;5351:234::o;5590:437::-;5669:1;5665:12;;;;5712;;;5733:2;;5787:4;5779:6;5775:17;5765:27;;5733:2;5840;5832:6;5829:14;5809:18;5806:38;5803:2;;;-1:-1:-1;;;5874:1:52;5867:88;5978:4;5975:1;5968:15;6006:4;6003:1;5996:15;5803:2;;5645:382;;;:::o",
  "source": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.6;\n\nimport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\n\ncontract MockERC20 is ERC20 {\n    constructor(string memory name, string memory symbol) ERC20(name, symbol) {\n        _mint(msg.sender, 10_000_000 * 10 ** decimals());\n    }\n}",
  "sourcePath": "/Users/prasad/projects/synthex/contracts/contracts/mock/MockERC20.sol",
  "ast": {
    "absolutePath": "/Users/prasad/projects/synthex/contracts/contracts/mock/MockERC20.sol",
    "exportedSymbols": {
      "Context": [
        6795
      ],
      "ERC20": [
        6670
      ],
      "IERC20": [
        6748
      ],
      "IERC20Metadata": [
        6773
      ],
      "MockERC20": [
        4858
      ]
    },
    "id": 4859,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 4831,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".6"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:23:28"
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
        "id": 4832,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 4859,
        "sourceUnit": 6671,
        "src": "57:55:28",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 4833,
              "name": "ERC20",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 6670,
              "src": "136:5:28"
            },
            "id": 4834,
            "nodeType": "InheritanceSpecifier",
            "src": "136:5:28"
          }
        ],
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 4858,
        "linearizedBaseContracts": [
          4858,
          6670,
          6773,
          6748,
          6795
        ],
        "name": "MockERC20",
        "nameLocation": "123:9:28",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 4856,
              "nodeType": "Block",
              "src": "222:65:28",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 4846,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "238:3:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 4847,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "238:10:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 4853,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "hexValue": "31305f3030305f303030",
                          "id": 4848,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "250:10:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_10000000_by_1",
                            "typeString": "int_const 10000000"
                          },
                          "value": "10_000_000"
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "*",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 4852,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "hexValue": "3130",
                            "id": 4849,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "263:2:28",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_10_by_1",
                              "typeString": "int_const 10"
                            },
                            "value": "10"
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "**",
                          "rightExpression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 4850,
                              "name": "decimals",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 6159,
                              "src": "269:8:28",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_uint8_$",
                                "typeString": "function () view returns (uint8)"
                              }
                            },
                            "id": 4851,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "269:10:28",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            }
                          },
                          "src": "263:16:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "250:29:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 4845,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6487,
                      "src": "232:5:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 4854,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "232:48:28",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4855,
                  "nodeType": "ExpressionStatement",
                  "src": "232:48:28"
                }
              ]
            },
            "id": 4857,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 4841,
                    "name": "name",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 4836,
                    "src": "208:4:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  {
                    "id": 4842,
                    "name": "symbol",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 4838,
                    "src": "214:6:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  }
                ],
                "id": 4843,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 4840,
                  "name": "ERC20",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 6670,
                  "src": "202:5:28"
                },
                "nodeType": "ModifierInvocation",
                "src": "202:19:28"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4839,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4836,
                  "mutability": "mutable",
                  "name": "name",
                  "nameLocation": "174:4:28",
                  "nodeType": "VariableDeclaration",
                  "scope": 4857,
                  "src": "160:18:28",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 4835,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "160:6:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4838,
                  "mutability": "mutable",
                  "name": "symbol",
                  "nameLocation": "194:6:28",
                  "nodeType": "VariableDeclaration",
                  "scope": 4857,
                  "src": "180:20:28",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 4837,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "180:6:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "159:42:28"
            },
            "returnParameters": {
              "id": 4844,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "222:0:28"
            },
            "scope": 4858,
            "src": "148:139:28",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 4859,
        "src": "114:175:28",
        "usedErrors": []
      }
    ],
    "src": "32:257:28"
  },
  "legacyAST": {
    "absolutePath": "/Users/prasad/projects/synthex/contracts/contracts/mock/MockERC20.sol",
    "exportedSymbols": {
      "Context": [
        6795
      ],
      "ERC20": [
        6670
      ],
      "IERC20": [
        6748
      ],
      "IERC20Metadata": [
        6773
      ],
      "MockERC20": [
        4858
      ]
    },
    "id": 4859,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 4831,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".6"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:23:28"
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
        "id": 4832,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 4859,
        "sourceUnit": 6671,
        "src": "57:55:28",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 4833,
              "name": "ERC20",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 6670,
              "src": "136:5:28"
            },
            "id": 4834,
            "nodeType": "InheritanceSpecifier",
            "src": "136:5:28"
          }
        ],
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 4858,
        "linearizedBaseContracts": [
          4858,
          6670,
          6773,
          6748,
          6795
        ],
        "name": "MockERC20",
        "nameLocation": "123:9:28",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 4856,
              "nodeType": "Block",
              "src": "222:65:28",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 4846,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "238:3:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 4847,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "238:10:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 4853,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "hexValue": "31305f3030305f303030",
                          "id": 4848,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "250:10:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_10000000_by_1",
                            "typeString": "int_const 10000000"
                          },
                          "value": "10_000_000"
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "*",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 4852,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "hexValue": "3130",
                            "id": 4849,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "263:2:28",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_10_by_1",
                              "typeString": "int_const 10"
                            },
                            "value": "10"
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "**",
                          "rightExpression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 4850,
                              "name": "decimals",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 6159,
                              "src": "269:8:28",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_uint8_$",
                                "typeString": "function () view returns (uint8)"
                              }
                            },
                            "id": 4851,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "269:10:28",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            }
                          },
                          "src": "263:16:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "250:29:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 4845,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6487,
                      "src": "232:5:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 4854,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "232:48:28",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4855,
                  "nodeType": "ExpressionStatement",
                  "src": "232:48:28"
                }
              ]
            },
            "id": 4857,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 4841,
                    "name": "name",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 4836,
                    "src": "208:4:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  {
                    "id": 4842,
                    "name": "symbol",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 4838,
                    "src": "214:6:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  }
                ],
                "id": 4843,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 4840,
                  "name": "ERC20",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 6670,
                  "src": "202:5:28"
                },
                "nodeType": "ModifierInvocation",
                "src": "202:19:28"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4839,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4836,
                  "mutability": "mutable",
                  "name": "name",
                  "nameLocation": "174:4:28",
                  "nodeType": "VariableDeclaration",
                  "scope": 4857,
                  "src": "160:18:28",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 4835,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "160:6:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4838,
                  "mutability": "mutable",
                  "name": "symbol",
                  "nameLocation": "194:6:28",
                  "nodeType": "VariableDeclaration",
                  "scope": 4857,
                  "src": "180:20:28",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 4837,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "180:6:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "159:42:28"
            },
            "returnParameters": {
              "id": 4844,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "222:0:28"
            },
            "scope": 4858,
            "src": "148:139:28",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 4859,
        "src": "114:175:28",
        "usedErrors": []
      }
    ],
    "src": "32:257:28"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.6+commit.0e36fba0.mod.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "2.0.1",
  "updatedAt": "2022-10-07T16:09:47.186Z"
}